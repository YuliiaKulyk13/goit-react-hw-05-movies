{"version":3,"file":"static/js/815.e62d71b7.chunk.js","mappings":"wOAGaA,EAAWC,EAAAA,GAAAA,GAAH,0JAURC,EAAYD,EAAAA,GAAAA,GAAH,2DAKTE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kDAIRI,EAAaJ,EAAAA,GAAAA,IAAH,6PAaVK,EAASL,EAAAA,GAAAA,IAAH,yDAKNM,EAAQN,EAAAA,GAAAA,GAAH,qK,SC7BLO,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,+BACE,SAACX,EAAD,UACGS,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACX,EAAD,UACGW,EAAMC,QACL,UAACX,EAAD,CAAUY,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMR,GAApD,WACE,SAACL,EAAD,WACE,SAACC,EAAD,CACEa,IACEN,EAAMO,YAAN,UAXH,mCAWG,OACkBP,EAAMO,aACpBC,EAENC,IAAKT,EAAMC,WAGf,SAACP,EAAD,UAAQM,EAAMC,YAbJD,EAAMG,GADP,OAsBxB,C,mMCtCYO,EAAU,mCACvBC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiDD,EACjDC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,GAAD,OAAKF,IAGP,IAAMG,EAAiB,mCAAG,+GAENF,EAAAA,EAAAA,IAAU,sBAFJ,uBAErBG,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,gCAK7BC,QAAQC,IAAR,MAL6B,yDAAH,qDASjBC,EAAY,mCAAG,WAAMC,GAAN,kGAEDP,EAAAA,EAAAA,IAAU,eAAgB,CAC/CQ,OAAQ,CACND,MAAOA,KAJa,uBAEhBJ,EAFgB,EAEhBA,KAFgB,kBAOjBA,EAAKM,SAPY,gCASxBL,QAAQC,IAAR,MATwB,yDAAH,sDAaZK,EAAY,mCAAG,WAAMC,GAAN,kGAEDX,EAAAA,EAAAA,IAAA,gBAAmBW,IAFlB,uBAEhBR,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,gCAKxBC,QAAQC,IAAR,MALwB,yDAAH,sDASZO,EAAO,mCAAG,WAAMD,GAAN,kGAEIX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,aAFJ,uBAEXR,EAFW,EAEXA,KAFW,kBAGZA,EAAKU,MAHO,gCAKnBT,QAAQC,IAAR,MALmB,yDAAH,sDASPS,EAAU,mCAAG,WAAMH,GAAN,kGAECX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,aAFD,uBAEdR,EAFc,EAEdA,KAFc,kBAGfA,EAAKM,SAHU,gCAKtBL,QAAQC,IAAR,MALsB,yDAAH,qD,kKC/CVU,E,QAAgBtC,GAAAA,GAAH,uE,SC8B1B,EA1Ba,WACX,OAAgCuC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMhC,GAAWC,EAAAA,EAAAA,MAejB,OAbAgC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAoB,mCAAG,gHAEClB,EAAAA,EAAAA,MAFD,gBAEjBO,EAFiB,EAEjBA,QACRS,EAAYT,GAHa,gDAKzBL,QAAQC,IAAR,MALyB,yDAAH,qDAS1Be,GACD,KAGC,6BACE,SAACL,EAAD,2CACCE,EAASI,OAAS,IACjB,SAACrC,EAAA,EAAD,CAAYC,OAAQgC,EAAU/B,SAAUA,MAI/C,C","sources":["components/MovieList/MoviesList.styled.jsx","components/MovieList/MoviesList.jsx","components/api/API.jsx","pages/Home.styled.jsx","pages/Home.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ItemList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n  width: 220px;\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ImgWrapper = styled.div`\n  border: 1px solid transparent;\n  border-radius: 10px;\n  padding: 5px;\n  width: 200px;\n  height: 300px;\n  transition: all 0.3s ease-in-out;\n  :hover {\n    box-shadow: 4px 4px 10px black;\n    transform: scale(1.1);\n  }\n`;\n\nexport const Poster = styled.img`\n  height: 100%;\n  width: 100%;\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  padding: 0 6px;\n  text-align: center;\n  color: black;\n  border-bottom: none;\n  :hover {\n    color: #44a9ed;\n  }\n`;\n","import noImage from '../../defaultImages/noImage.webp';\nimport { useLocation } from 'react-router-dom';\nimport {\n  ItemLink,\n  ItemList,\n  Title,\n  ImgWrapper,\n  Poster,\n  MovieItem,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const imageURL = 'https://image.tmdb.org/t/p/w300';\n  return (\n    <>\n      <ItemList>\n        {movies.map(movie => (\n          <MovieItem key={movie.id}>\n            {movie.title && (\n              <ItemLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                <ImgWrapper>\n                  <Poster\n                    src={\n                      movie.poster_path\n                        ? `${imageURL}${movie.poster_path}`\n                        : noImage\n                    }\n                    alt={movie.title}\n                  />\n                </ImgWrapper>\n                <Title>{movie.title}</Title>\n              </ItemLink>\n            )}\n          </MovieItem>\n        ))}\n      </ItemList>\n    </>\n  );\n};\n","import axios from 'axios';\n\nexport const API_KEY = 'dd434c778f29331c06da952bd2cda993';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  api_key: `${API_KEY}`,\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        query: query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullMovie = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const TrendingTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n","import { MoviesList } from 'components/MovieList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'components/api/API';\nimport { useLocation } from 'react-router-dom';\nimport { TrendingTitle } from './Home.styled';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const createTrendingMovies = async () => {\n      try {\n        const { results } = await getTrendingMovies();\n        setTrending(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    createTrendingMovies();\n  });\n\n  return (\n    <main>\n      <TrendingTitle>Trending today ðŸŽ¬ </TrendingTitle>\n      {trending.length > 0 && (\n        <MoviesList movies={trending} location={location} />\n      )}\n    </main>\n  );\n};\nexport default Home;\n"],"names":["ItemList","styled","MovieItem","ItemLink","Link","ImgWrapper","Poster","Title","MoviesList","movies","location","useLocation","map","movie","title","to","id","state","from","src","poster_path","noImage","alt","API_KEY","axios","api_key","getTrendingMovies","data","console","log","searchMovies","query","params","results","getFullMovie","movieId","getCast","cast","getReviews","TrendingTitle","useState","trending","setTrending","useEffect","createTrendingMovies","length"],"sourceRoot":""}