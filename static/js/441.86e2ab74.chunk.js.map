{"version":3,"file":"static/js/441.86e2ab74.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/CardCast/CardCast.styled.jsx","components/CardCast/CardCast.jsx","components/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/api/API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin-bottom: 30px;\n  list-style: none;\n`;\n","import styled from 'styled-components';\n\nexport const CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 20px;\n  list-style: none;\n`;\nexport const CastCardItem = styled.li`\n  width: 200px;\n\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const CastCardName = styled.p`\n  display: flex;\n  gap: 5px;\n  justify-content: baseline;\n  align-items: baseline;\n`;\n","import defaultActor from '../../defaultImages/defaultActor.png';\nimport { CastCardItem, CastCardName, CastContainer } from './CardCast.styled';\n\nconst CardCast = ({ cast }) => {\n  const imgURL = 'https://image.tmdb.org/t/p/w200';\n  return (\n    <CastContainer>\n      {cast &&\n        cast.map(({ character, id, original_name, profile_path }) => {\n          return (\n            <CastCardItem key={id}>\n              <img\n                src={profile_path ? `${imgURL}${profile_path}` : defaultActor}\n                alt={original_name}\n                height=\"200\"\n              />\n\n              <CastCardName>Name: {original_name}</CastCardName>\n              <CastCardName>Character: {character}</CastCardName>\n            </CastCardItem>\n          );\n        })}\n    </CastContainer>\n  );\n};\n\nexport default CardCast;\n","import Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'components/api/API';\n\nimport { CastList } from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport CardCast from 'components/CardCast/CardCast';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n\n    const renderCast = async () => {\n      setLoading(true);\n      try {\n        const results = await getCast(movieId);\n        if (results.length === 0) {\n          Notiflix.Notify.info('Sorry there are no cast by your request!');\n          return;\n        }\n        setCast(results);\n        setError(null);\n      } catch (error) {\n        setError(error);\n        Notiflix.Notify.failure('Oops,something went wrong.Please try again!');\n      } finally {\n        setLoading(false);\n      }\n    };\n    renderCast();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {loading && <Loader />}\n      {error && <p>{error.message} </p>}\n      <CardCast cast={cast} />\n    </CastList>\n  );\n};\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { MutatingDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderContainer>\n      <MutatingDots\n        height=\"100\"\n        width=\"100\"\n        color=\"#8d9495\"\n        secondaryColor=\"#8d9495\"\n        radius=\"12.5\"\n        ariaLabel=\"mutating-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </LoaderContainer>\n  );\n};\n","import axios from 'axios';\n\nexport const API_KEY = 'dd434c778f29331c06da952bd2cda993';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  api_key: `${API_KEY}`,\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        query: query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullMovie = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["CastList","styled","CastContainer","CastCardItem","CastCardName","cast","map","character","id","original_name","profile_path","src","defaultActor","alt","height","useState","setCast","error","setError","loading","setLoading","movieId","useParams","useEffect","renderCast","getCast","results","length","Notiflix","Loader","message","LoaderContainer","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","API_KEY","axios","api_key","getTrendingMovies","data","console","log","searchMovies","query","params","getFullMovie","getReviews"],"sourceRoot":""}