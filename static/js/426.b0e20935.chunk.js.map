{"version":3,"file":"static/js/426.b0e20935.chunk.js","mappings":"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","sources":["components/api/API.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieDescription/MovieDescription.styled.jsx","components/MovieDescription/MovieDescription.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = 'dd434c778f29331c06da952bd2cda993';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  api_key: `${API_KEY}`,\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        query: query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullMovie = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  margin-bottom: 20px;\n  padding: 8px;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  background-color: #3885e4;\n  color: white;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    background-color: #dfd357;\n    color: white;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\n\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"14\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieDescriptionContainer = styled.div`\n  display: flex;\n`;\nexport const TextContainer = styled.div`\n  display: block;\n  padding: 15px;\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nexport const Overview = styled.h3`\n  text-align: center;\n  margin-bottom: 15px;\n`;\n\nexport const Genres = styled.h3`\n  text-align: center;\n  margin-bottom: 15px;\n`;\n","import noImage from '../../defaultImages/noImage.webp';\nimport {\n  Genres,\n  MovieDescriptionContainer,\n  Overview,\n  TextContainer,\n  Title,\n} from './MovieDescription.styled';\n\nconst MovieDescription = ({ movieDetails }) => {\n  const { poster_path, release_date, title, vote_average, overview, genres } =\n    movieDetails;\n\n  const movieFullYear = new Date(release_date).getFullYear();\n  const userScore = Math.round(vote_average).toFixed(1);\n  const imageURL = 'https://image.tmdb.org/t/p/w300';\n  return (\n    <MovieDescriptionContainer>\n      <img\n        src={poster_path ? `${imageURL}${poster_path}` : noImage}\n        alt={title}\n      />\n      <TextContainer>\n        <Title>\n          {title} ({movieFullYear})\n        </Title>\n        <p>User Score: {userScore}%</p>\n        <Overview>Overview</Overview>\n        <p>{overview}</p>\n        <Genres>Genres</Genres>\n        <p>{genres && genres.map(genre => genre.name).join(', ')}</p>\n      </TextContainer>\n    </MovieDescriptionContainer>\n  );\n};\n\nexport default MovieDescription;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n  padding: 20px;\n  list-style: none;\n  text-decoration: none;\n`;\n\nexport const ItemLink = styled(Link)`\n  padding: 8px 16px;\n  border-radius: 5px;\n  text-decoration: none;\n  color: white;\n  background-color: #3885e4;\n  &.active {\n    background-color: #e6d738;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { getFullMovie } from 'components/api/API';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport MovieDescription from 'components/MovieDescription/MovieDescription';\n\nimport { AdditionalList, ItemLink } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDeatils] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const renderMovieDetails = async () => {\n      try {\n        const results = await getFullMovie(movieId);\n        if (!results) {\n          Notiflix.Notify.warning(\n            'Sorry, there are no matching results by your request!'\n          );\n          return;\n        }\n        setMovieDeatils(results);\n        setError(null);\n      } catch (error) {\n        setError(error);\n        Notiflix.Notify.failure(\n          'Sorry there are no movies matching your request.Please try again!'\n        );\n      }\n    };\n    renderMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <main>\n        <BackLink to={backLinkHref}>Go back</BackLink>\n        {movieDetails && <MovieDescription movieDetails={movieDetails} />}\n      </main>\n      <div>\n        <AdditionalList>\n          <li>\n            <ItemLink to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </ItemLink>\n          </li>\n          <li>\n            <ItemLink to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </ItemLink>\n          </li>\n        </AdditionalList>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n      {error && <p>{error.message}</p>}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","api_key","getTrendingMovies","data","console","log","searchMovies","query","params","results","getFullMovie","movieId","getCast","cast","getReviews","StyledLink","styled","Link","BackLink","to","children","size","MovieDescriptionContainer","TextContainer","Title","Overview","Genres","movieDetails","poster_path","release_date","title","vote_average","overview","genres","movieFullYear","Date","getFullYear","userScore","Math","round","toFixed","src","noImage","alt","map","genre","name","join","AdditionalList","ItemLink","useState","setMovieDeatils","error","setError","useParams","backLinkHref","useLocation","state","from","useEffect","renderMovieDetails","Notiflix","Suspense","fallback","message"],"sourceRoot":""}