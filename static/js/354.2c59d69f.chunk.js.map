{"version":3,"file":"static/js/354.2c59d69f.chunk.js","mappings":"kRAIMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,2BCFD,EAxByB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aAClBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,aAAcC,EACjCH,EADiCG,MAAOC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAG5DC,EAAgB,IAAIC,KAAKN,GAAcO,cACvCC,EAAYC,KAAKC,MAAMR,GAAcS,QAAQ,GAEnD,OACE,4BACE,gBAAKC,IAAK,kCAAoCb,EAAac,IAAKZ,KAChE,4BACE,0BACGA,EADH,KACYI,EADZ,QAGA,wCAAgBG,EAAhB,SACA,sCACA,uBAAIL,KACJ,oCACA,uBAAIC,GAAUA,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,aAI1D,EC2CD,EA1DqB,WAAO,IAAD,IACzB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOpB,EAAP,KAAqBqB,EAArB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAyB7C,OAvBAC,EAAAA,EAAAA,YAAU,WACR,GAAKN,EAAL,CAEA,IAAMO,EAAkB,mCAAG,8GAEDC,EAAAA,EAAAA,IAAaR,GAFZ,UAEjBS,EAFiB,gDAIdC,EAAAA,GAAAA,MACL,0DALmB,OAQvBb,EAAgBY,GAChBV,EAAS,MATc,kDAWvBA,EAAS,EAAD,IACRW,EAAAA,GAAAA,MACE,qEAbqB,0DAAH,qDAiBxBH,GAnBoB,CAoBrB,GAAE,CAACP,KAGF,4BACE,6BACE,SAAC5B,EAAD,CAAUC,GAAI6B,EAAd,qBACC1B,IAAgB,SAAC,EAAD,CAAkBA,aAAcA,QAEnD,4BACE,2BACE,yBACE,SAAC,KAAD,CAAMH,GAAG,OAAO+B,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAM7B,GAAG,UAAU+B,MAAO,CAAEC,KAAMH,GAAlC,2BAKJ,SAAC,EAAAS,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,SAGHd,IAAS,uBAAIA,EAAMe,YAGzB,C","sources":["components/BackLink.jsx","components/MovieDescription.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"14\" />\n      {children}\n    </StyledLink>\n  );\n};\n","const MovieDescription = ({ movieDetails }) => {\n  const { poster_path, release_date, title, vote_average, overview, genres } =\n    movieDetails;\n\n  const movieFullYear = new Date(release_date).getFullYear();\n  const userScore = Math.round(vote_average).toFixed(1);\n\n  return (\n    <div>\n      <img src={'https://image.tmdb.org/t/p/w300' + poster_path} alt={title} />\n      <div>\n        <h3>\n          {title} ({movieFullYear})\n        </h3>\n        <p>User Score: {userScore} %</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres && genres.map(genre => genre.name).join(', ')}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDescription;\n","import { toast } from 'react-toastify';\nimport { BackLink } from 'components/BackLink';\nimport { getFullMovie } from 'components/api/API';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport MovieDescription from 'components/MovieDescription';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDeatils] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const renderMovieDetails = async () => {\n      try {\n        const results = await getFullMovie(movieId);\n        if (!results) {\n          return toast.error(\n            'Sorry, there are no matching results by your request!'\n          );\n        }\n        setMovieDeatils(results);\n        setError(null);\n      } catch (error) {\n        setError(error);\n        toast.error(\n          'Sorry there are no movies matching your request.Please try again!'\n        );\n      }\n    };\n    renderMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <main>\n        <BackLink to={backLinkHref}>Go back</BackLink>\n        {movieDetails && <MovieDescription movieDetails={movieDetails} />}\n      </main>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n      {error && <p>{error.message}</p>}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","movieDetails","poster_path","release_date","title","vote_average","overview","genres","movieFullYear","Date","getFullYear","userScore","Math","round","toFixed","src","alt","map","genre","name","join","useState","setMovieDeatils","error","setError","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","renderMovieDetails","getFullMovie","results","toast","Suspense","fallback","message"],"sourceRoot":""}