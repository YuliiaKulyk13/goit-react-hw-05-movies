{"version":3,"file":"static/js/267.960de6a6.chunk.js","mappings":"oMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACE,wBAAKG,EAAMK,WAFNL,EAAME,GADA,OAUxB,C,+IClBYI,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3C,OACE,0BACE,kBAAMA,SAAUA,EAAhB,WACE,kBACEC,KAAK,OACLC,KAAK,YACLC,aAAa,MACbL,MAAOA,EACPM,YAAY,gBACZL,SAAUA,KAEZ,mBAAQE,KAAK,SAAb,wBAIP,E,mCC6DD,EApEe,WAAO,IAAD,EACnB,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAeqB,EAAf,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM3B,GAAWC,EAAAA,EAAAA,MAEX2B,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAEzCC,EAAyB,KAAZZ,EAAiB,CAAEa,MAAOb,GAAY,CAAC,EA0C1D,OAzBAc,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdJ,EAAJ,CAEA,IAAMK,EAAY,mCAAG,2FACnBX,GAAW,GADQ,mBAIKY,EAAAA,EAAAA,IAAaN,GAJlB,UAKM,KADjBO,EAJW,QAKLC,OALK,yCAMRC,EAAAA,GAAAA,MAAY,2CANJ,OAQjBjB,EAAUe,GACVX,EAAS,MATQ,kDAWjBA,EAAS,EAAD,IACRa,EAAAA,GAAAA,MACE,qEAbe,yBAgBjBf,GAAW,GAhBM,6EAAH,qDAmBlBW,GArB4B,CAsB7B,GAAE,CAACL,KAGF,6BACE,SAACnB,EAAD,CACEG,SAxCe,SAAA0B,GAGnB,GAFAA,EAAEC,iBAEqB,KAAnBrB,EAAQsB,OACV,OAAOH,EAAAA,GAAAA,KAAW,2BAGpBjB,EAAU,IACVD,EAAW,IACXQ,EAAgBG,EACjB,EA+BKpB,MAAOQ,EACPP,SA9CmB,SAAA2B,GACvBnB,EAAWmB,EAAEG,cAAc/B,MAAMgC,cAClC,IA+CI3C,EAAOqC,OAAS,IAAK,SAACtC,EAAA,EAAD,CAAYC,OAAQA,EAAQC,SAAUA,IAC3DuB,IAAS,uBAAIA,EAAMoB,UACnBtB,IAAW,SAACuB,EAAA,EAAD,KACZ,SAAC,KAAD,CAAgBC,UAAW,IAAMC,SAAU,gBAGhD,C","sources":["components/MoviesList.jsx","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <h3>{movie.title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","export const SearchBox = ({ value, onChange, onSubmit }) => {\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"movieName\"\n          autoComplete=\"off\"\n          value={value}\n          placeholder=\"Search movies\"\n          onChange={onChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n","import { ToastContainer, toast } from 'react-toastify';\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList';\nimport { SearchBox } from 'components/SearchBox';\nimport { searchMovies } from 'components/api/API';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n// import { BackLink } from 'components/BackLink';\n\nconst Movies = () => {\n  const [request, setRequest] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const movieName = searchParams.get('query') ?? '';\n\n  const nextParams = request !== '' ? { query: request } : {};\n  const handleNameChange = e => {\n    setRequest(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (request.trim() === '') {\n      return toast.warn('Please enter a request!');\n    }\n\n    setMovies([]);\n    setRequest('');\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (movieName === '') return;\n\n    const renderMovies = async () => {\n      setLoading(true);\n\n      try {\n        const results = await searchMovies(movieName);\n        if (results.length === 0) {\n          return toast.error('Something went wrong.Please try again!');\n        }\n        setMovies(results);\n        setError(null);\n      } catch (error) {\n        setError(error);\n        toast.error(\n          'Sorry there are no movies matching your request.Please try again!'\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n    renderMovies();\n  }, [movieName]);\n\n  return (\n    <main>\n      <SearchBox\n        onSubmit={handleSubmit}\n        value={request}\n        onChange={handleNameChange}\n      />\n\n      {movies.length > 0 && <MoviesList movies={movies} location={location} />}\n      {error && <p>{error.message}</p>}\n      {loading && <Loader />}\n      <ToastContainer autoClose={4000} position={'top-right'} />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","SearchBox","value","onChange","onSubmit","type","name","autoComplete","placeholder","useState","request","setRequest","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","nextParams","query","useEffect","renderMovies","searchMovies","results","length","toast","e","preventDefault","trim","currentTarget","toLowerCase","message","Loader","autoClose","position"],"sourceRoot":""}